local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local allowedPlaceIds = {
    [11137575513] = true,
    [14044614256] = true,
}

local function isAdmin(plr)
    return plr.UserId == game.CreatorId
end

local function formatTime()
    local t = os.date("*t")
    return string.format("[%02d:%02d:%02d]", t.hour, t.min, t.sec)
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ZundaSpyGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 320, 0, 300)
mainFrame.Position = UDim2.new(0.5, -160, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BackgroundTransparency = 0.3  -- semi-transparent background
mainFrame.BorderColor3 = Color3.new(1, 1, 1)
mainFrame.BorderSizePixel = 2
mainFrame.Parent = screenGui

local titleLabel = Instance.new("TextLabel", mainFrame)
titleLabel.Size = UDim2.new(1, -30, 0, 30)
titleLabel.Position = UDim2.new(0, 5, 0, 5)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Zunda Spy"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.Font = Enum.Font.SourceSans
titleLabel.TextSize = 22
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

local minimize = Instance.new("TextButton", mainFrame)
minimize.Size = UDim2.new(0, 24, 0, 24)
minimize.Position = UDim2.new(1, -28, 0, 4)
minimize.Text = "–"
minimize.TextColor3 = Color3.new(1, 1, 1)
minimize.Font = Enum.Font.SourceSans
minimize.TextSize = 20
minimize.BackgroundColor3 = Color3.fromRGB(60, 60, 60)

local toggle = Instance.new("TextButton", mainFrame)
toggle.Size = UDim2.new(0.5, 0, 0, 30)
toggle.Position = UDim2.new(0.25, 0, 0, 40)
toggle.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
toggle.Text = "Off :-("
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.Font = Enum.Font.SourceSans
toggle.TextSize = 18

local filterLabel = Instance.new("TextLabel", mainFrame)
filterLabel.Size = UDim2.new(1, -20, 0, 20)
filterLabel.Position = UDim2.new(0, 10, 0, 80)
filterLabel.BackgroundTransparency = 1
filterLabel.Text = "only see silent commands (TCO) ⬇️"
filterLabel.TextColor3 = Color3.new(1, 1, 1)
filterLabel.Font = Enum.Font.SourceSans
filterLabel.TextSize = 14
filterLabel.TextXAlignment = Enum.TextXAlignment.Left

local filterToggle = Instance.new("TextButton", mainFrame)
filterToggle.Size = UDim2.new(0.5, 0, 0, 24)
filterToggle.Position = UDim2.new(0.25, 0, 0, 105)
filterToggle.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
filterToggle.Text = "Off :-("
filterToggle.TextColor3 = Color3.new(1, 1, 1)
filterToggle.Font = Enum.Font.SourceSans
filterToggle.TextSize = 16

local outputFrame = Instance.new("ScrollingFrame", mainFrame)
outputFrame.Size = UDim2.new(1, -20, 0, 130)
outputFrame.Position = UDim2.new(0, 10, 0, 140)
outputFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
outputFrame.BackgroundTransparency = 0.2  -- slightly transparent
outputFrame.BorderSizePixel = 0
outputFrame.ScrollBarThickness = 6
outputFrame.AutomaticCanvasSize = Enum.AutomaticSize.None
outputFrame.ScrollingDirection = Enum.ScrollingDirection.XY
outputFrame.CanvasSize = UDim2.new(0, 1000, 0, 0)

local UIListLayout = Instance.new("UIListLayout", outputFrame)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 2)

local function addOutput(text)
    local line = Instance.new("TextLabel")
    line.Size = UDim2.new(0, 1000, 0, 20)
    line.BackgroundTransparency = 1
    line.TextColor3 = Color3.new(1, 1, 1)
    line.Font = Enum.Font.SourceSans
    line.TextSize = 14
    line.TextXAlignment = Enum.TextXAlignment.Left
    line.TextYAlignment = Enum.TextYAlignment.Top
    line.TextWrapped = false
    line.TextTruncate = Enum.TextTruncate.None
    line.Text = text
    line.Parent = outputFrame
    outputFrame.CanvasSize = UDim2.new(0, 1000, 0, UIListLayout.AbsoluteContentSize.Y + 5)
    outputFrame.CanvasPosition = Vector2.new(0, outputFrame.CanvasSize.Y.Offset)
end

local toggled = false
local filtered = false
local allowed = allowedPlaceIds[game.PlaceId]

local function setMain(state)
    toggled = state
    toggle.Text = state and "On :3" or "Off :-("
    toggle.BackgroundColor3 = state and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    if not state then
        filtered = false
        filterToggle.Text = "Off :-("
        filterToggle.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    end
    addOutput(state and "[ZundaSpy On Noda!]" or "[ZundaSpy Off Noda!]")
end

toggle.MouseButton1Click:Connect(function()
    setMain(not toggled)
end)

filterToggle.MouseButton1Click:Connect(function()
    if not toggled or not allowed then return end
    filtered = not filtered
    filterToggle.Text = filtered and "On :3" or "Off :-("
    filterToggle.BackgroundColor3 = filtered and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
end)

minimize.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    local reopen = Instance.new("TextButton", screenGui)
    reopen.Text = "Open ZundaSpy"
    reopen.Size = UDim2.new(0, 120, 0, 30)
    reopen.Position = UDim2.new(1, -140, 0, 40)
    reopen.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    reopen.TextColor3 = Color3.new(1, 1, 1)
    reopen.Font = Enum.Font.SourceSans
    reopen.TextSize = 14
    reopen.MouseButton1Click:Connect(function()
        mainFrame.Visible = true
        reopen:Destroy()
    end)
end)

local function log(plr, msg)
    if not toggled then return end
    if filtered and not (msg:find(";") or msg:find("/")) then return end
    local prefix = formatTime()
    local isAdminTag = isAdmin(plr) and ", ADMIN" or ""
    local line = string.format("%s %s%s, %s", prefix, plr.Name, isAdminTag, msg)
    addOutput(line)
end

for _, p in ipairs(game.Players:GetPlayers()) do
    p.Chatted:Connect(function(msg) log(p, msg) end)
end

game.Players.PlayerAdded:Connect(function(p)
    p.Chatted:Connect(function(msg) log(p, msg) end)
end)

-- Make mainFrame draggable
local dragging, input, startPos, frameStart
mainFrame.InputBegan:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        input = i
        startPos = i.Position
        frameStart = mainFrame.Position
        i.Changed:Connect(function()
            if i.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(i)
    if i == input and dragging then
        local delta = i.Position - startPos
        mainFrame.Position = UDim2.new(frameStart.X.Scale, frameStart.X.Offset + delta.X, frameStart.Y.Scale, frameStart.Y.Offset + delta.Y)
    end
end)
